{"ast":null,"code":"import _classCallCheck from \"/Users/orie/OR13/create-react-app-bpmn/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/orie/OR13/create-react-app-bpmn/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/orie/OR13/create-react-app-bpmn/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/orie/OR13/create-react-app-bpmn/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/orie/OR13/create-react-app-bpmn/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/orie/OR13/create-react-app-bpmn/src/Modeler/Modeler.js\";\nimport React, { Component } from \"react\";\nvar BpmnJS = window.BpmnJS;\nvar $ = window.$;\n\nvar Modeler =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Modeler, _Component);\n\n  function Modeler() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Modeler);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Modeler)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.exportDiagram = function () {\n      bpmnModeler.saveXML({\n        format: true\n      }, function (err, xml) {\n        if (err) {\n          return console.error(\"could not save BPMN 2.0 diagram\", err);\n        }\n\n        alert(\"Diagram exported. Check the developer tools!\");\n        console.log(\"DIAGRAM\", xml);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Modeler, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      setTimeout(function () {\n        var diagramUrl = \"https://cdn.rawgit.com/bpmn-io/bpmn-js-examples/dfceecba/starter/diagram.bpmn\";\n        var bpmnModeler = new BpmnJS({\n          container: \"#canvas\",\n          keyboard: {\n            bindTo: window\n          }\n        });\n        $.get(diagramUrl, openDiagram, \"text\");\n\n        function openDiagram(bpmnXML) {\n          // import diagram\n          bpmnModeler.importXML(bpmnXML, function (err) {\n            if (err) {\n              return console.error(\"could not import BPMN 2.0 diagram\", err);\n            } // access modeler components\n\n\n            var canvas = bpmnModeler.get(\"canvas\");\n            var overlays = bpmnModeler.get(\"overlays\"); // zoom to fit full viewport\n\n            canvas.zoom(\"fit-viewport\"); // attach an overlay to a node\n\n            overlays.add(\"SCAN_OK\", \"note\", {\n              position: {\n                bottom: 0,\n                right: 0\n              },\n              html: '<div class=\"diagram-note\">Mixed up the labels?</div>'\n            }); // add marker\n\n            canvas.addMarker(\"SCAN_OK\", \"needs-discussion\");\n          });\n        }\n      }, 1 * 1000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"modeler\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"canvas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"save-button\",\n        onClick: function onClick() {\n          console.log(\"export\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"print to console\"));\n    }\n  }]);\n\n  return Modeler;\n}(Component);\n\nexport default Modeler;","map":{"version":3,"sources":["/Users/orie/OR13/create-react-app-bpmn/src/Modeler/Modeler.js"],"names":["React","Component","BpmnJS","window","$","Modeler","exportDiagram","bpmnModeler","saveXML","format","err","xml","console","error","alert","log","setTimeout","diagramUrl","container","keyboard","bindTo","get","openDiagram","bpmnXML","importXML","canvas","overlays","zoom","add","position","bottom","right","html","addMarker"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,IAAMC,MAAM,GAAGC,MAAM,CAACD,MAAtB;AACA,IAAME,CAAC,GAAGD,MAAM,CAACC,CAAjB;;IAEMC,O;;;;;;;;;;;;;;;;;;UAyCJC,a,GAAgB,YAAM;AACpBC,MAAAA,WAAW,CAACC,OAAZ,CAAoB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAApB,EAAsC,UAASC,GAAT,EAAcC,GAAd,EAAmB;AACvD,YAAID,GAAJ,EAAS;AACP,iBAAOE,OAAO,CAACC,KAAR,CAAc,iCAAd,EAAiDH,GAAjD,CAAP;AACD;;AACDI,QAAAA,KAAK,CAAC,8CAAD,CAAL;AACAF,QAAAA,OAAO,CAACG,GAAR,CAAY,SAAZ,EAAuBJ,GAAvB;AACD,OAND;AAOD,K;;;;;;;yCAhDoB;AACnBK,MAAAA,UAAU,CAAC,YAAM;AACf,YAAIC,UAAU,GACZ,+EADF;AAGA,YAAMV,WAAW,GAAG,IAAIL,MAAJ,CAAW;AAC7BgB,UAAAA,SAAS,EAAE,SADkB;AAE7BC,UAAAA,QAAQ,EAAE;AACRC,YAAAA,MAAM,EAAEjB;AADA;AAFmB,SAAX,CAApB;AAOAC,QAAAA,CAAC,CAACiB,GAAF,CAAMJ,UAAN,EAAkBK,WAAlB,EAA+B,MAA/B;;AAEA,iBAASA,WAAT,CAAqBC,OAArB,EAA8B;AAC5B;AACAhB,UAAAA,WAAW,CAACiB,SAAZ,CAAsBD,OAAtB,EAA+B,UAASb,GAAT,EAAc;AAC3C,gBAAIA,GAAJ,EAAS;AACP,qBAAOE,OAAO,CAACC,KAAR,CAAc,mCAAd,EAAmDH,GAAnD,CAAP;AACD,aAH0C,CAI3C;;;AACA,gBAAIe,MAAM,GAAGlB,WAAW,CAACc,GAAZ,CAAgB,QAAhB,CAAb;AACA,gBAAIK,QAAQ,GAAGnB,WAAW,CAACc,GAAZ,CAAgB,UAAhB,CAAf,CAN2C,CAO3C;;AACAI,YAAAA,MAAM,CAACE,IAAP,CAAY,cAAZ,EAR2C,CAS3C;;AACAD,YAAAA,QAAQ,CAACE,GAAT,CAAa,SAAb,EAAwB,MAAxB,EAAgC;AAC9BC,cAAAA,QAAQ,EAAE;AACRC,gBAAAA,MAAM,EAAE,CADA;AAERC,gBAAAA,KAAK,EAAE;AAFC,eADoB;AAK9BC,cAAAA,IAAI,EAAE;AALwB,aAAhC,EAV2C,CAiB3C;;AACAP,YAAAA,MAAM,CAACQ,SAAP,CAAiB,SAAjB,EAA4B,kBAA5B;AACD,WAnBD;AAoBD;AACF,OApCS,EAoCP,IAAI,IApCG,CAAV;AAqCD;;;6BAWQ;AACP,aACE;AAAK,QAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AACE,QAAA,EAAE,EAAC,aADL;AAEE,QAAA,OAAO,EAAE,mBAAM;AACbrB,UAAAA,OAAO,CAACG,GAAR,CAAY,QAAZ;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,CADF;AAaD;;;;EAhEmBd,S;;AAmEtB,eAAeI,OAAf","sourcesContent":["import React, { Component } from \"react\";\n\nconst BpmnJS = window.BpmnJS;\nconst $ = window.$;\n\nclass Modeler extends Component {\n  componentWillMount() {\n    setTimeout(() => {\n      var diagramUrl =\n        \"https://cdn.rawgit.com/bpmn-io/bpmn-js-examples/dfceecba/starter/diagram.bpmn\";\n\n      const bpmnModeler = new BpmnJS({\n        container: \"#canvas\",\n        keyboard: {\n          bindTo: window\n        }\n      });\n\n      $.get(diagramUrl, openDiagram, \"text\");\n\n      function openDiagram(bpmnXML) {\n        // import diagram\n        bpmnModeler.importXML(bpmnXML, function(err) {\n          if (err) {\n            return console.error(\"could not import BPMN 2.0 diagram\", err);\n          }\n          // access modeler components\n          var canvas = bpmnModeler.get(\"canvas\");\n          var overlays = bpmnModeler.get(\"overlays\");\n          // zoom to fit full viewport\n          canvas.zoom(\"fit-viewport\");\n          // attach an overlay to a node\n          overlays.add(\"SCAN_OK\", \"note\", {\n            position: {\n              bottom: 0,\n              right: 0\n            },\n            html: '<div class=\"diagram-note\">Mixed up the labels?</div>'\n          });\n          // add marker\n          canvas.addMarker(\"SCAN_OK\", \"needs-discussion\");\n        });\n      }\n    }, 1 * 1000);\n  }\n\n  exportDiagram = () => {\n    bpmnModeler.saveXML({ format: true }, function(err, xml) {\n      if (err) {\n        return console.error(\"could not save BPMN 2.0 diagram\", err);\n      }\n      alert(\"Diagram exported. Check the developer tools!\");\n      console.log(\"DIAGRAM\", xml);\n    });\n  };\n  render() {\n    return (\n      <div id=\"modeler\">\n        <div id=\"canvas\" />\n        <button\n          id=\"save-button\"\n          onClick={() => {\n            console.log(\"export\");\n          }}\n        >\n          print to console\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Modeler;\n"]},"metadata":{},"sourceType":"module"}